package com.shinhan.firstzone;

import java.util.stream.IntStream;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import com.shinhan.firstzone.repository.GuestBookRepository;
import com.shinhan.firstzone.vo2.GuestBookEntity;

import lombok.extern.log4j.Log4j2;

@Log4j2
@SpringBootTest
public class GuestBookTest {
	
	@Autowired
	GuestBookRepository gRepo;
	
	
	/* 등록일이 null인 data 조회하기 */
	@Test 
	void select5() {//gno가 10보다 크고, regdate가 null인 데이터 조회
		gRepo.findByRegDateIsNull4(10L).forEach(entity ->{
			log.info(entity);
		});
	}
	
	//@Test 
	void select4() {
		gRepo.findByRegDateIsNull3().forEach(entity ->{
			log.info(entity);
		});
	}
	
	//@Test 
	void select3() {
		gRepo.findByRegDateIsNull2().forEach(entity ->{
			log.info(entity);
		});
	}
	
	//@Test
	void select2() {
		gRepo.findByRegDateIsNull().forEach(entity -> {
			log.info(entity);
		});
	}
	
	//@Test
	void select() {
		//new Consumer<GuestBookEntity>() {} 대신 람다표현식(화살표함수)
		gRepo.findAll().forEach(entity -> {
			log.info(entity);
		});
	}
	
	@Test 
	void insert() {//테이블 insert  
		IntStream.rangeClosed(6, 10).forEach(i -> {
			//객체 생성 new GuestBookEntity보다 유지보수하기 좋은 builder()를 사용
			GuestBookEntity entity = GuestBookEntity.builder() //builder사용-> AllArgs생성자 생성
									.title("화요일%%"+i)
									.content("배고파##")
									.writer("사용자"+i)
									.build();
			gRepo.save(entity);
		
		});
	}
}
