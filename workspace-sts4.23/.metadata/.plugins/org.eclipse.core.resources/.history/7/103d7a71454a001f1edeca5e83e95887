package com.shinhan.firstzone.vo4;

import java.util.List;

import com.querydsl.core.BooleanBuilder;
import com.querydsl.core.types.Predicate;
import com.shinhan.firstzone.vo2.MemberEntity;

//브라우저-insert->|    JPA|-->DB
//브라우저<-(보드정보,멤버정보)조회-|    웹보드엔티티<-JAP|<--DB
// =>db에서 가져온 데이터와 브라우저에 보여주는 데이터 형태가 다르다. DTO필요
public interface WebBoardService { //설계
	//CRUD작업제공
	//1.입력
	Long register(WebBoardDTO dto);
	//2.조회
	List<WebBoardDTO> getList();
	WebBoardDTO selectById(Long bno);
	//3.수정
	void modify(WebBoardDTO dto);
	//4.삭제
	void delete(Long bno); 
	
	//동정 SQL만들기
	public default Predicate makePredicate(String type, String keyword) {
		BooleanBuilder builder = new BooleanBuilder();
		QWebBoardEntity board = QWebBoardEntity.webBoardEntity;
		builder.and(board.bno.gt(0));
		//검색조건처리
		if(type==null) return builder;
		switch (type) {
		case "t": builder.and(board.title.like("%" + keyword + "%")); break;
		case "c": builder.and(board.content.like("%" + keyword + "%")); break;
		case "w": builder.and(board.writer.like("%" + keyword + "%")); break;
		default: break;
		}
		return builder;
	}
	
	//DTO => Entity (DB에 반영하기 위함)
	 default WebBoardEntity dtoToEntity(WebBoardDTO dto) {
		 MemberEntity member = MemberEntity.builder().build();
		 //date는 타임스탬프로 찍힐거라 안가져와도 됨.
		 WebBoardEntity entity = WebBoardEntity.builder()
				 .bno(dto.getBno())
				 .title(dto.getTitle())
				 .content(dto.getContent())
				 .writer(member)
				 .build();
		 
		 return entity;
	 }
	 
	//interface를 구현하고 싶을 때? default 사용!
	//Entity <= DTO (Data전송을 위함, controller, service, view에서 작업)
	default WebBoardDTO entityToDTO(WebBoardEntity entity){
		WebBoardDTO dto = WebBoardDTO.builder()
				.bno(entity.getBno())
				.title(entity.getTitle())
				.mid(entity.getWriter().getMid())
				
				.build();
		return dto;
	}
}
